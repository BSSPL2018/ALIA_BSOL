@page
@using BSOL.Core.Entities
@using BSOL.Helpers
@using Kendo.Mvc.UI
@model BusinessService
@{
    ViewData["Title"] = "Business Service";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}
@if (!await Html.HasAccess(Forms.Accounts.BusinessServices))
{
    return;
}

<form id="app" v-on:submit.prevent="submitForm">
    <div id="editor" class="modal" tabindex="-1">

        <div class="modal-dialog modal-dialog-scrollable">
            <div class="modal-content">
                <div class="modal-header header-modal" style="BusinessServices">
                    <h5 class="modal-title title-modal">Business Services</h5>
                    <button type="button" class="btn-close close-btn" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="form-group col-md-6">
                            @Html.LabelFor(x => x.BusinessUnitId, "Business Unit")
                            <kendo-datasource ref="dsBusinessUnit" :transport-read-url="'@Url.Action("ReadShopGroup", "Common")'" :transport-read-type="'POST'"></kendo-datasource>
                            <kendo-combobox ref="ddBusinessUnit" v-model="input.BusinessUnitId" :data-source-ref="'dsBusinessUnit'" :data-text-field="'Text'" :data-value-field="'Id'" :filter="'contains'" style="width:100%;"></kendo-combobox>
                        </div>
                        <div class="form-group col-md-6">
                            @Html.LabelFor(x => x.ServiceCategory, "Service Category")
                            <kendo-datasource ref="dsCategory" :transport-read-url="'@Url.Action("ReadServiceCategory", "Common")'" :transport-read-type="'POST'" style="width:100%"></kendo-datasource>
                            <kendo-combobox ref="ddCategory" v-model="input.ServiceCategory" :data-source-ref="'dsCategory'" :filter="'contains'" style="width:100%;"></kendo-combobox>
                        </div>
                        <div class="form-group col-md-6">
                            @Html.LabelFor(x => x.ServiceName, "Service Name")
                            <input type="text" v-model.trim="input.ServiceName" class="k-textbox" />
                        </div>
                        <div class="form-group col-md-6">
                            @Html.LabelFor(x => x.ServiceNo, "Service No")
                            <input type="text" v-model.trim="input.ServiceNo" class="k-textbox" />
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Close</button>
                        <button type="submit" style="background:#235cff !important;" class="btn btn-primary">Save changes</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

@(
Html.Kendo().TreeList<BusinessService>()
        .Name("grid")
        .Columns(x =>
        {
            
            x.Add().Field(e => e.BusinessName).Width(150);
            x.Add().Field(e => e.ServiceCategory).Width(150);
            x.Add().Field(e => e.ServiceName).Width(150);
            x.Add().Field(e => e.ServiceNo).Width(200);
            @* x.Add().Field(e => e.DebitTo).Width(180).Template("").Editor("ComboBoxEditor").(new { Data = new EditorData(Url.Action("ReadAccountsByType", "Common", new { Type = AccountTypes.Income }), "DebitAccountName") }).Title("Debit Account");
            x.Add().Field(e => e.CreditTo).Width(180).Editor("ComboBoxEditor").EditorViewData(new { Data = new EditorData(Url.Action("ReadAccountsByType", "Common", new { Type = AccountTypes.Income }), "CreditAccountName") }).Title("Debit Account");
 *@            x.Add().Template(@"<a class='btn-grid btn-grid-add fa fa-plus' onclick='app.addItem(""#:uid#"")' title='add'></a>").HtmlAttributes(new { style = "text-align:center;" }).Width(40).Filterable(false).Sortable(false);
            x.Add().Template(@"<a class='btn-grid btn-grid-edit fa fa-edit' onclick='app.editItem(""#:uid#"")' title='Edit'></a>").HtmlAttributes(new { style = "text-align:center;" }).Width(40).Filterable(false).Sortable(false);
            x.Add().Template(@"<a class='btn-grid btn-grid-delete fa fa-trash-o' onclick='app.deleteItem(""#:uid#"")' title='Delete'></a>").HtmlAttributes(new { style = "text-align:center;" }).Width(40).Filterable(false).Sortable(false);
        
        })

        .Filterable(f => f.Extra(false))
        .Sortable()
        .DataSource(dataSource => dataSource
        .Read(read => read.Action("ReadBusiness", "Accounts"))
        .ServerOperation(false)
          .Model(m =>
                {
                    m.Id(f => f.ID);
                    m.ParentId(f => f.ParentId).Nullable(true);
                })

     ).HtmlAttributes(new { @class = "h-grid v-grid" })
        )
@{
    var jsonData = Vue.Encode(new BusinessService() { });
}
@await Html.PartialAsync("DocumentsDialog","")
<script type="text/javascript">
    var app = new Vue({
        el: '#app',
        data: {
            input: @(jsonData),
            //IsShow: false
        },
        methods: {
            validateForm: function () {
                removeError();
                var isValid = true;
                var setError = function (cntrl, msg) {
                    isValid = false;
                    showError(cntrl, msg);
                };
                var item = this.input;
                if (!item.BusinessUnitId)
                    setError('BusinessUnitId');

                return isValid;
            },
            submitForm: function () {
                if (!this.validateForm())
                    return;

                $.postData("@Url.Action("SaveBusiness", "Accounts")", this.input, function (res) {
                    if (res.HasError) {
                        kendoAlert(res.Message, res.HasError);
                        return;
                    }
                    app.input.Id = res.Id;
                    app.onSuccess(res);
                });
            },
            selectItem: function (uid) {
                var dataItem = $('#grid').getKendoTreeList().dataSource.getByUid(uid);
                this.input = cloneAndDecode(dataItem);
            },
            editItem: function (uid) {
                var dataItem = $('#grid').getKendoTreeList().dataSource.getByUid(uid);
                this.selectItem(uid);
                showModal('editor');
            },
          
            onSuccess: function (res) {
                kendoAlert(res.Message, res.HasError);
                if (res.HasError)
                    return;
                $('#grid').getKendoTreeList().dataSource.read();
                this.$refs.dsCategory.kendoWidget().read();
                hideModal('editor');
            },
            deleteItem: function (uid) {
                var dataItem = $('#grid').getKendoTreeList().dataSource.getByUid(uid);
                kendoConfirm("Do you want to delete this BusinessServices?", function () {
                    $.postData("@Url.Action("DeleteBusiness","Accounts")", { ID: dataItem.ID },
                        function (data) {
                            kendoAlert(data.Message, data.HasError);
                            if (data.HasError)
                                return;
                            $('#grid').getKendoTreeList().dataSource.read();
                        });
                });
            },
            addItem: function (uid) {
                this.input = @(jsonData);
                if (uid) {
                    var dataItem = $('#grid').getKendoTreeList().dataSource.getByUid(uid);
                    this.input.ParentId = dataItem.ID;
                }
                showModal('editor');
                //this.IsShow = true;
                //$('#editor').show();
            },
            cancelBusinessService: function () {
                $('#grid').getKendoTreeList().close();
                this.IsShow = false;
                $('#editor').hide();
            }
          
        }

    })
</script>

<script type="text/javascript">

    function toggle_Change() {
        app.input = @(jsonData);
       // $('#grid').getKendoGrid().dataSource.read();

    }
    $(function () {
        $('#grid.grid-edit').on('dblclick', 'tbody tr', function () {
            app.editItem($(this).attr('data-uid'));
        });
    });


</script>