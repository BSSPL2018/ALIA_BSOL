@using BSOL.Helpers
@using BSOL.Web.Helpers
@using BSOL.Core.Entities
@using Kendo.Mvc.UI

<style type="text/css">
    .highlight-empty-row {
        background-color: #ffcccc;
    }
</style>
@Html.Kendo().Window().Name("wndAddShopGroup").Content(@<text>

        <div id="appSGroup">
            <div class="g-title" style="  margin-top: -11px;">
                <div class="g-left">
                    <button type="button" style="padding: 3px 10px;border-radius: 3px;background: #0F9D58;" onclick="appSGroup.addShopGroup()" class="btn btn-primary">
                        <i class="fa fa-plus-circle"></i>Add
                    </button>
                </div>
                <div class="g-center">
                    <span class="g-text">Add Business Unit</span>
                </div>
                <div class="g-right">
                    <button type="button"  onclick="appSGroup.saveShopGroup()" class="btn btn-save">
                        <i class="fa fa-check-circle"></i>Save
                    </button>
                </div>
            </div>
        </div>

        <div>
            @(Html.Kendo().Grid<ShopGroup>().Name("gridSGroup")
        .Columns(c =>
        {
        c.DeleteColumn(x => x.ID, "appSGroup.deleteShopGroup('#:uid#')");
        c.Bound(p => p.Name).Width(130);
        c.Bound(p => p.GSTIN).Width(130);
        c.Bound(p => p.EntryBy).Width(130);
        c.DateColumn(p => p.EntryOn).Width(130);
        })
        .Editable(editable => editable.Mode(GridEditMode.InCell))
        .Events(x => x.SaveChanges("appSGroup.gridShops_SaveChanges"))
        .DataSource(dataSource => dataSource
        .Ajax()
        .Batch(true)
        .ServerOperation(true)
        .PageSize(50)
        .Read(read => read.Action("ReadShopGroup", "Procurements"))
        .Model(model =>
        {
        model.Id(p => p.ID);
        model.Field(p => p.ID).Editable(false);
        model.Field(p => p.EntryBy).Editable(false);
        model.Field(p => p.EntryOn).Editable(false);
        })
        .Create("UpdateShopGroup", "Procurements")
        .Update("UpdateShopGroup", "Procurements")
        )
        .EnableFilter()
        .Excel(x => x.AllPages(true))
        .Resizable(x => x.Columns(true))
        .Pageable(x => x.Refresh(true))
        .Sortable()
        .Scrollable()
        .HtmlAttributes(new { @class = "h-grid v-grid" })
        .Editable(Html,AllowAdd : false, AllowSave: false)
            )
        </div>

    </text>).Visible(false).Title("Add Business Unit").Draggable().MaxWidth(800).Events(events => events.Close("onWindowClose"))

<script type="text/javascript">
    var appSGroup = new Vue({
        el: '#appSGroup',
        data: {

        },
        methods: {
            gridShops_SaveChanges: function (e) {
                // var data = $(e.sender.element).getKendoGrid().dataSource.data();
                var data = $("#gridSGroup").getKendoGrid().dataSource.data();
                var dirty = $.grep(data, function (item) {
                    return item.dirty || item.Id === 0;
                });
                var shopGroupDetails = $.grep(dirty, function (item) {
                    return !item.shopGroupDetails;
                });

                var errors = [];
                var emptyShopGroupName = 0;
                if (shopGroupDetails && shopGroupDetails.length == 0)
                    errors.push("Shop Group details should not be empty");

                if (shopGroupDetails && shopGroupDetails.length > 0) {
                    $.each(shopGroupDetails, function (i) {
                        if (shopGroupDetails[i].Name == "") {
                            emptyShopGroupName++;
                            return;
                        }
                    });
                }
                if (emptyShopGroupName > 0)
                    errors.push("Please enter shop group name");

                if (errors.length) {
                    e.preventDefault();
                    kendoAlert(errors.join("\n"), true);
                }
            },
            deleteShopGroup: function (uid) {
                var dataItem = $('#gridSGroup').getKendoGrid().dataSource.getByUid(uid);
                if (dataItem.ID == 0) {
                    $('#gridSGroup').getKendoGrid().dataSource.cancelChanges(dataItem);
                    return;
                }

                kendoConfirm("Do you want to delete this shop group details?", function () {
                    $.postData("@Url.Action("DeleteShopGroupDetails", "Procurements")", { ID: dataItem.ID, Name: dataItem.Name },
                        function (data) {
                            kendoAlert(data.Message, data.HasError);
                            if (!data.HasError)
                                $('#gridSGroup').getKendoGrid().dataSource.read();
                        });
                });
            },
            addShopGroup: function () {
                var grid = $('#gridSGroup').data('kendoGrid');

                var hasBlankRow = false;
                grid.tbody.find('tr').each(function () {
                    var dataItem = grid.dataItem(this);
                    if (dataItem.Name == "" || dataItem.Name == null) {
                        hasBlankRow = true;
                        $(this).addClass('highlight-empty-row');
                        return false;
                    }
                });

                if (!hasBlankRow) {
                    grid.addRow();
                } 
            },
            saveShopGroup: function () {
                $("#gridSGroup").data("kendoGrid").saveChanges();;
            }
        }
    });
</script>

