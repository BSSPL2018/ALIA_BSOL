@page
@using Core.Entities
@{
    ViewData["Title"] = "Shop Counters";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}
@if (!await Html.HasAccess(Forms.Procurement.Shops))
{
    return;
}

@(Html.Kendo().Grid<ShopCounter>()
    .Name("grid")
    .Editable(Html, "Shop Counter Details", true, true)
    .Columns(c =>
    {
        c.DeleteColumn(x => x.Id, "deleteShopCounters('#:uid#')").Width(10);
        c.Bound(x => x.ShopId).ClientTemplate("#: ShopName #").EditorTemplateName("ComboBoxEditor").EditorViewData(new { Data = new EditorData(Url.Action("ReadShops", "Common"), "ShopName") }).Title("Shop Name").Width(100);
        c.NumberColumn(x => x.NoOfCounter).Width(100);
    })
    .DataSource(d => d.Ajax()
            .Batch(true)
            .ServerOperation(false)
            .Events(events => events.Error("grid_ErrorHandler").RequestEnd("gridShopCounters_RequestEnd"))
            .Read("ReadShopCounters", "Procurements")
            .Model(model =>
            {
                model.Id(p => p.Id);
                model.Field("Id", typeof(long)).Editable(false);
            })
            .Create("UpdateShopCounters", "Procurements")
            .Update("UpdateShopCounters", "Procurements")
        )
        .HtmlAttributes(new { @class = "h-grid v-grid" })
        .Events(x => x.SaveChanges("gridShopCounter_SaveChanges"))
        .AutoBind(true)
        .Resizable(x => x.Columns(true))
        .Sortable()
        .Scrollable()
        .Navigatable()
    )


<script type="text/javascript">
    function gridShopCounter_SaveChanges(e) {
        var data = $(e.sender.element).getKendoGrid().dataSource.data();
        var dirty = $.grep(data, function (item) {
            return item.dirty || item.Id === 0;
        });
        var shopDetails = $.grep(dirty, function (item) {
            return !item.shopDetails;
        });

        var errors = [];
        var emptyShopCounters = 0;
        if (shopDetails && shopDetails.length == 0)
            emptyShopCounters++;

        if (shopDetails && shopDetails.length > 0) {
            $.each(shopDetails, function (i) {
                if (shopDetails[i].ShopName == "")
                    emptyShopCounters++;
                return;
            });
        }
        if (emptyShopCounters > 0)
            errors.push("Shop counter details should not be empty");
        if (errors.length) {
            e.preventDefault();
            kendoAlert(errors.join("\n"), true);
        }
    }
    function gridShopCounters_RequestEnd(e) {
        if ((e.type == "create" || e.type == "update") && !e.response.Errors)
            kendoAlert("Shop Counter details Saved.");
    }

    function deleteShopCounters(uid) {
        var dataItem = $('#grid').getKendoGrid().dataSource.getByUid(uid);
        if (dataItem.Id == 0) {
            $('#grid').getKendoGrid().dataSource.cancelChanges(dataItem);
            return;
        }
        kendoConfirm("Do you want to delete this shop counter?", function () {
            $.postData("@Url.Action("DeleteShopCounters", "Procurements")", { Id: dataItem.Id, Category: dataItem.Category, Description: dataItem.Description, CounterName: dataItem.CounterName, ShopName: dataItem.ShopName },
                function (data) {
                    kendoAlert(data.Message, data.HasError);
                    if (!data.HasError)
                        $('#grid').getKendoGrid().dataSource.read();
                });
        });
    }

</script>