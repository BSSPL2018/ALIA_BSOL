@page
@using BSOL.Core.Entities
@model CustomerSellingCode
@if (!await Html.HasAccess(Forms.Procurement.Items))
{
    return;
}
@{
    ViewData["Title"] = "Customer Selling Code";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<div id="app">
    <div class="g-title">
        <div class="g-left">
            @Html.ToggleButton(Orientation.Vertical)
        </div>
        <div class="g-left" style="margin-left:35px;">
            <kendo-datasource ref="dsCustomers" :transport-read-url="'@Url.Action("ReadCustomers", "Common")'" :transport-read-type="'POST'" style="width:100%"></kendo-datasource>
            <kendo-combobox ref="ddCustomers" :value="input.CustomerId" :data-source-ref="'dsCustomers'" :data-text-field="'Text'" :data-value-field="'Id'" :filter="'contains'" style="width: 100%;" placeholder="Type customer name" @@change="customerChange"></kendo-combobox>
        </div>
        <span class="g-center">Customer Selling Code</span>
        <div class="g-right">
            <button type='submit' class='btn btn-save btn-cntrls' id='btnSave' @@click='submitForm' title='Save'><i class='fa fa-check'></i>Save</button>
            @Html.ExcelButton()
        </div>
    </div>
    <div id="editor" class="components" style="display: none;">
        <div class="row">
            <div class="form-group col-md-3">
                @Html.LabelFor(x => x.CustomerItemCode, "Customer Selling Code")
                <input type="text" v-model.trim="input.CustomerItemCode" class="k-textbox" />
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(x => x.SKU, "Item")<a v-if="!input.CreatedBy" class="c-lnk" style="margin-left:10px;" href="javascript:app.pickItem()">Pick Item</a>
                <input type="text" :value="input.SKU" class="k-textbox" readonly />
            </div>
        </div>
    </div>
</div>

@(Html.Kendo().Grid<CustomerSellingCode>()
      .Name("grid")
        .Columns(x =>
        {
            x.DeleteColumn(x => x.CustomerId);
            x.EditColumn("javascript:app.editItem('#:uid#')");
            x.Bound(c => c.CustomerItemCode).Width(150).Title("Customer Selling Code");
            x.Bound(c => c.SKUFormatted).Width(150).Title("SKU");
            x.Bound(c => c.UPC).Width(150).Title("UPC");
            x.Bound(c => c.ItemCode).Width(150).Title("Item Name");
            x.DescriptionColumn(c => c.ItemDescription).Title("Description").Width(200);
            x.Bound(c => c.Category).Width(150);
            x.Bound(c => c.CreatedBy).Width(160);
            x.DateColumn(c => c.CreatedOn).Width(150);
        })
      .Sortable()
      .Scrollable()
      .Pageable(x => x.Refresh(true))
      .Resizable(x => x.Columns(true))
      .EnableFilter()
      .EnableEdit(Html)
      .DataSource(d => d
      .Ajax().ServerOperation(true).PageSize(50)
      .Read(read => read.Action("ReadCustomerSellingCodes", "Procurements").Data("grid_Data"))))

@{
    var jsonData = Vue.Encode(new CustomerSellingCode());
}

@section scripts{

    @await Html.PartialAsync("AllItems")

    <script type="text/javascript">
    var app = new Vue({
        el: '#app',
        data: {
            input:@(jsonData),
            ItemMode: "",
            CustomerId:0
        },
        created: function () {
            appItem.onSelect = this.onItemSelect;
        },
        methods: {
            validateForm: function () {
                removeError();
                var isValid = true;
                var setError = function (cntrl, msg) {
                    isValid = false;
                    showError(cntrl, msg);
                };
                var item = this.input;
                if (!item.SKU)
                    setError('SKU');
                if (!item.CustomerItemCode)
                    setError('CustomerItemCode');

                return isValid;
            },
            submitForm: function () {
                if (!this.validateForm())
                    return;

                if (this.$refs.ddCustomers && this.$refs.ddCustomers.kendoWidget().selectedIndex == -1) {
                    kendoAlert('Please select Customer', true);
                    return;
                }

                $.postData("@Url.Action("SaveCustomerSellingCode", "Procurements")", this.input, this.onSuccess);
            },
            onSuccess: function (res) {
                kendoAlert(res.Message, res.HasError);
                if (res.HasError)
                    return;
                $('.toggle-btn.btn-minus').close();
                $('#grid').getKendoGrid().dataSource.read();
            },
            pickItem: function () {
                appItem.open();
            },
            onItemSelect: function (item) {
                this.input.ItemId = item.Id;
                this.input.SKU = item.SKU;
            },
            selectItem: function (uid) {
                var dataItem = $('#grid').getKendoGrid().dataSource.getByUid(uid);
                this.input = cloneAndDecode(dataItem);
            },
            editItem: function editItem(uid) {
                $('.toggle-btn.btn-minus').open();
                this.selectItem(uid);
            },
            deleteItem: function (uid) {
                if (uid)
                    this.selectItem(uid);
                kendoConfirm("Do you want to delete this customer selling code?", function () {
                        $.postData("@Url.Action("DeleteCustomerSellingCode", "Procurements")", app.input, app.onSuccess);
                });

            },
            @* kendoConfirm("Do you want to delete this customer selling code?", function () {
                $.postData("@Url.Action("DeleteCustomerSellingCode", "Procurements")", { CustomerId: app.input.CustomerId, CustomerItemCode: app.input.CustomerItemCode, ItemId: app.input.ItemId }, app.onSuccess);
            });*@
            customerChange: function (e) {
                app.CustomerId = e.sender.value();
                app.input.CustomerId = e.sender.value();
                $('#grid').getKendoGrid().dataSource.read();
            }
        }
    });
    </script>
}

<script type="text/javascript">
    $(function () {
        $('#grid.grid-edit').on('dblclick', 'tbody tr', function () {
            app.editItem($(this).attr('data-uid'));
        });
    });

    function grid_Data() {
        return { customerId: (app.input.CustomerId > 0 ? app.input.CustomerId : 0)};
    }

    function toggle_Change() {
        app.input = @(jsonData);
        app.input.CustomerId = app.CustomerId;
        if ($('#editor').css('display') === 'block') {
            if (app.$refs.ddCustomers && app.$refs.ddCustomers.kendoWidget().selectedIndex == -1) {
                kendoAlert("Please select customer", true);
                return;
            }
        }
    }

</script>
